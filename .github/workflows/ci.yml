defaults:
  run:
    shell: "bash"

name: "CI"

on:
  push:
    branches: ["main"]
    tags: ["v*"]
  pull_request:
    branches: ["main"]

concurrency:
  group: "${{ github.workflow }}-${{ github.head_ref || github.run_id }}"
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"

jobs:
  dev:
    name: "Verify package is installed well"

    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest"]

    runs-on: "${{ matrix.os }}"

    steps:
      - uses: "actions/checkout@v4.1.2"

      - id: "python_and_poetry"
        uses: "./.github/actions/install_python_and_poetry"
        with:
          cache-key-suffix: "-main"
          python-version-file: ".python-version"

      - name: "Install package"
        run: "poetry install --only main"

      - name: "Import package"
        run: "poetry run python3 -c 'import aiohttp_middlewares'"

  docs:
    uses: "./.github/workflows/ci_verify_docs_build.yml"

  test:
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        include:
          - python-version: "3.12"
            dev: "true"

    name: "Python ${{ matrix.python-version }}"

    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v4.1.2"

      - id: "python_and_poetry"
        uses: "./.github/actions/install_python_and_poetry"
        with:
          cache-key-suffix: "-dev-test"
          python-version: "${{ matrix.python-version }}"

      - if: "${{ matrix.dev == 'true' }}"
        uses: "./.github/actions/run_pre_commit"
        with:
          python-version: "${{ steps.python_and_poetry.outputs.python-version }}"

      - uses: "./.github/actions/run_tox"
        with:
          python-path: "${{ steps.python_and_poetry.outputs.python-path }}"
          python-version: "${{ steps.python_and_poetry.outputs.python-version }}"
          use-coveralls: "${{ matrix.dev }}"
          coveralls-token: "${{ secrets.GITHUB_TOKEN }}"

  package:
    needs: ["test"]

    permissions:
      id-token: "write"

    uses: "./.github/workflows/ci_package.yml"

  release:
    needs: ["package"]
    if: "${{ startsWith(github.ref, 'refs/tags/') }}"

    uses: "./.github/workflows/ci_release.yml"
    secrets:
      release-token: "${{ secrets.GITHUB_TOKEN }}"
