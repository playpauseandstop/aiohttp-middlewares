[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.badabump]
version_type = "semver"
version_files = [
  "./pyproject.toml",
  "./src/aiohttp_middlewares/__init__.py",
]

[tool.black]
line_length = 79
target_version = ["py37"]

[tool.coverage.run]
branch = true
source = ["aiohttp_middlewares"]

[tool.coverage.paths]
source = ["./src/"]

[tool.coverage.report]
exclude_lines = ["if TYPE_CHECKING:", "@overload"]
omit = ["./src/*/__main__.py", "./src/*/annotations.py"]
fail_under = 95
skip_covered = true
show_missing = true

[tool.isort]
profile = "attrs"
combine_as_imports = true
force_alphabetical_sort_within_sections = true
lines_between_types = 0
src_paths = ["./", "./src/"]
virtual_env = "./.venv/"

[tool.mypy]
allow_untyped_globals = true
check_untyped_defs = true
disallow_any_decorated = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
exclude = ["docs/", "tests/"]
follow_imports = "normal"
follow_imports_for_stubs = true
ignore_missing_imports = false
namespace_packages = true
no_implicit_optional = true
mypy_path = "./src/"
python_executable = "./.venv/bin/python3"
show_column_numbers = true
show_error_codes = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
  "conftest",
  "migrations.*",
  "tests.*",
  "*.tests",
]
ignore_errors = true

[tool.poetry]
name = "aiohttp-middlewares"
version = "2.1.1"
description = "Collection of useful middlewares for aiohttp applications."
authors = ["Igor Davydenko <iam@igordavydenko.com>"]
license = "BSD-3-Clause"
readme = "README.rst"
homepage = "https://igordavydenko.com/projects.html#aiohttp-middlewares"
repository = "https://github.com/playpauseandstop/aiohttp-middlewares"
documentation = "https://aiohttp-middlewares.readthedocs.io/"
packages = [
  {include = "aiohttp_middlewares", from = "./src/"},
]
keywords = ["aiohttp", "aiohttp-server", "middlewares", "aiohttp-middlewares"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Web Environment",
  "Framework :: aiohttp",
  "Framework :: AsyncIO",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Topic :: Internet :: WWW/HTTP",
  "Topic :: Internet :: WWW/HTTP :: WSGI :: Middleware",
  "Topic :: Utilities",
  "Typing :: Typed"
]

[tool.poetry.dependencies]
python = "^3.7"
aiohttp = "^3.8.1"
async-timeout = "^4.0.2"
yarl = "^1.5.1"

[tool.poetry.group.dev.dependencies]
mypy = "^0.971"

[tool.poetry.group.docs.dependencies]
furo = "^2022.9.15"
Sphinx = "^5.1.1"
sphinx-autobuild = "^2021.3.14"
sphinx-autodoc-typehints = "^1.19.2"
sphinx-copybutton = "^0.5.0"
sphinxext-opengraph = "^0.6.3"

[tool.poetry.group.test.dependencies]
coverage = {extras = ["toml"], version = "^6.4.4"}
coveralls = "^3.3.1"
pytest = "^7.1.3"
pytest-aiohttp = "^1.0.4"
pytest-cov = "^3.0.0"

[tool.pytest.ini_options]
minversion = "7.1.3"
addopts = "--cov --no-cov-on-fail"
testpaths = ["./tests/"]
log_level = "info"
asyncio_mode = "auto"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py37,py38,py39,py310,py310-minimum-requirements,py311
skipsdist = True

[gh-actions]
python =
  3.7: py37
  3.8: py38
  3.9: py39
  3.10: py310
  3.11: py311

[testenv]
passenv =
  AIOHTTP_NO_EXTENSIONS
  PYTEST_ADDOPTS
  PYTHONPATH
setenv =
  PYTHONPATH=.
skip_install = True
whitelist_externals = poetry
commands_pre =
  poetry install --only main,test
commands =
  poetry run python3 -m pytest

[testenv:py310-minimum-requirements]
commands_pre =
  poetry install --only main,test
  poetry run python3 -m pip install aiohttp==3.8.1 async-timeout==4.0.2 yarl==1.5.1
"""
